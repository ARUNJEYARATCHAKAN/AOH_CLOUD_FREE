managed implementation in class zbp_ap_i_travel_m_01 unique;
strict ( 2 );

define behavior for ZAP_I_TRAVEL_M_01 alias travel
implementation in class zbp_ap_i_travel_m_01 unique
persistent table zap_m_travel_01
with additional save
etag master last_changed_at
lock master
early numbering
authorization master ( global )

{
    // administrative fields: read only
  field ( readonly )
  last_changed_at,
  last_changed_by, created_at, created_by;

  // mandatory fields that are required to create a travel
  field ( mandatory ) agency_id, customer_id, begin_date, end_date, overall_status, booking_fee, currency_code;

  // Semantic Key field, which is readonly for the consumer, value is assigned in early numbering
  field ( readonly ) travel_id;

  // mapping entity's field types with table field types
  mapping for zap_m_travel_01 corresponding;

  // standard operations for travel entity
  create;
  update;
  delete;

  // instance action and dynamic action control
  action ( features : instance ) acceptTravel result [1] $self;
  action ( features : instance ) rejectTravel result [1] $self;

  // internal action that is called by determinations
  internal action ReCalcTotalPrice;

  // instance factory action for copying travel instances
  factory action copyTravel [1];

  // validations
  validation validateCustomer on save { create; field customer_id; }
  validation validateAgency on save { create; field agency_id; }
  validation validateDates on save { create; field begin_date, end_date; }
  validation validateStatus on save { create; field overall_status; }
  validation validateCurrencyCode on save { create; field currency_code; }
  validation validateBookingFee   on save { create; field booking_fee; }


  determination calculateTotalPrice on modify { create; field booking_fee, currency_code; }



  // create booking by association
  association _Booking { create ( features : instance ); }


}

define behavior for ZAP_I_BOOKING_M_01 alias booking
implementation in class zbp_ap_i_travel_m_01 unique
persistent table zap_m_book_01
etag master last_changed_at
lock dependent by _Travel
early numbering
authorization dependent by _Travel

{
  // administrative fields: read only
  field ( readonly ) last_changed_at;

  // static field control
  field ( mandatory ) carrier_id, connection_id, flight_date, booking_status;
  field ( readonly ) travel_id, booking_id;

  // mapping entity's field types with table field types
  mapping for zap_m_book_01 corresponding;

  // Fields that are mandatory for create but should be read-only afterwards
  field ( mandatory : create, readonly : update ) booking_date, customer_id;
  field ( mandatory ) currency_code;

  // standard operations for booking entity
  update;
  //  delete;


  // validations
  validation validateStatus on save { create; field booking_status; }
  validation validateCustomer     on save { create; field customer_id; }
  validation validateConnection   on save { create; field carrier_id, connection_id, flight_date; }
  validation validateCurrencyCode on save { create; field currency_code; }
  validation validateFlightPrice  on save { create; field flight_price; }

  // determination for calculation of total flight price
  determination calculateTotalPrice on modify { create; field flight_price, currency_code; }

  association _Travel { }
  // create booking supplement by association
  association _BookSupplement { create ( features : instance ); }

}

define behavior for ZAP_I_BOOKSUPPL_M_01 alias booksuppl
implementation in class zbp_ap_i_travel_m_01 unique
with unmanaged save
//persistent table zap_m_books_01
etag master last_changed_at
lock dependent by _Travel
early numbering
authorization dependent by _Travel

{
  // administrative fields: read only
  field ( readonly ) last_changed_at;

  // static field control
  field ( mandatory ) price, supplement_id, currency_code;
  field ( readonly ) travel_id, booking_id, booking_supplement_id;

  // mapping entity's field types with table field types
  mapping for zap_m_books_01 corresponding;

  // standard operations for booking supplement entity
   update;

  // determination for calculation of total suppl. price
  determination calculateTotalPrice on modify { create; field price, currency_code; }

  // validations
  validation validateCurrencyCode on save { create; field currency_code; }
  validation validateSupplement   on save { create; field supplement_id; }
  validation validatePrice        on save { create; field price; }

  association _Travel { }
  association _Booking { }
}